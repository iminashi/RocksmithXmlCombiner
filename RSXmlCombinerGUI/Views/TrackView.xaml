<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:local="clr-namespace:RSXmlCombinerGUI"
             xmlns:views="clr-namespace:RSXmlCombinerGUI.Views"
             xmlns:vm="clr-namespace:RSXmlCombinerGUI.ViewModels"
             xmlns:models="clr-namespace:RSXmlCombinerGUI.Models"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="150"
             x:Class="RSXmlCombinerGUI.Views.TrackView">
  <Design.DataContext>
    <vm:TrackViewModel/>
  </Design.DataContext>
  
  <UserControl.Styles>
    <Style Selector="TextBlock.h1">
      <Setter Property="FontSize" Value="20"/>
      <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style Selector="TextBlock.h2">
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style Selector="Button">
      <Setter Property="Button.Padding" Value="10, 5"/>
    </Style>
    <Style Selector="StackPanel.part">
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="Margin" Value="10"/>
      <Setter Property="Spacing" Value="5"/>
    </Style>
    <Style Selector="Button.close:pointerover">
      <Setter Property="Button.Background" Value="DarkRed"/>
      <Setter Property="Button.Foreground" Value="White"/>
    </Style>
  </UserControl.Styles>
  
  <Border BorderBrush="LightSlateGray"
          BorderThickness="2"
          CornerRadius="10"
          Padding="5"
          Margin="5"
          Background="#f8f8f8">
    <DockPanel Margin="5, 0, 0, 0">
      
      <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
        <!-- Track Number -->
        <TextBlock Classes="h1">
          <TextBlock.Text>
            <MultiBinding Converter="{x:Static local:ValueConverters.IndexToString}">
              <Binding Path="."/>
              <Binding Path="$parent[views:TrackListView].DataContext.Tracks"/>
            </MultiBinding>
          </TextBlock.Text>
        </TextBlock>
        
        <!-- Title -->
        <TextBlock Classes="h1" Text="{Binding Title}"/>
      </StackPanel>
      
      <!-- Audio File Name 
      <TextBlock Text="{Binding AudioFile}"
                 DockPanel.Dock="Top"
                 Foreground="DarkGray"
                 IsVisible="{Binding AudioFile, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"/>-->
      
      <StackPanel Orientation="Horizontal">
        <!-- Delete Button -->
        <Button VerticalAlignment="Center"
                FontSize="18"
                Margin="0, 0, 20, 0"
                Classes="close"
                Content="X"
                Command="{Binding $parent[views:TrackListView].DataContext.RemoveTrack}"
                CommandParameter="{Binding}"/>

        <!-- Audio Part -->
        <StackPanel Classes="part">
          <TextBlock Classes="h2" HorizontalAlignment="Center">Audio</TextBlock>
          <!-- Audio File Name -->
          <TextBlock Text="{Binding AudioFileNameShort^}" Foreground="DarkGray"
                     IsVisible="{Binding AudioFile, Converter={x:Static ObjectConverters.IsNotNull}}"
                     ToolTip.Tip="{Binding AudioFile}"
                     MaxWidth="100"/>
          <Button Command="{Binding OpenAudio}"
                  Width="100"
                  Content="{Binding AudioFile, Converter={x:Static local:ValueConverters.OpenButtonText}}"/>
        </StackPanel>

        <!-- Trim Part -->
        <Panel Width="90">
          <StackPanel Classes="part">
            <StackPanel.IsVisible>
              <MultiBinding Converter="{x:Static local:ValueConverters.IndexToVisibility}">
                <Binding Path="."/>
                <Binding Path="$parent[views:TrackListView].DataContext.Tracks"/>
              </MultiBinding>
            </StackPanel.IsVisible>
            <TextBlock Classes="h2">Trim:</TextBlock>
            <NumericUpDown Minimum="0"
                           HorizontalAlignment="Left"
                           Width="75"
                           Value="{Binding TrimAmount}"
                           FormatString="F3"/>
            <TextBlock Margin="10, 0, 0, 0">seconds</TextBlock>
          </StackPanel>
        </Panel>

        <!-- Lead Part -->
        <StackPanel Classes="part">
          <TextBlock Classes="h2"
                     Text="Lead"
                     Foreground="{Binding LeadColor^}"/>
          <TextBlock Text="{Binding LeadFileNameShort^}" Foreground="DarkGray"
                     IsVisible="{Binding LeadArrangement, Converter={x:Static ObjectConverters.IsNotNull}}"
                     ToolTip.Tip="{Binding LeadArrangement.FileName}"/>
          <Button Content="{Binding LeadArrangement, Converter={x:Static local:ValueConverters.OpenButtonText}}"
                  Width="100"
                  Command="{Binding AddArrangement}"
                  CommandParameter="{x:Static models:ArrangementType.Lead}"/>
          <!-- HACK -->
          <Panel Name="leadHackPanel" IsVisible="{Binding LeadArrangement.ToneNames, Converter={x:Static ObjectConverters.IsNull}}">
            <Panel.IsEnabled>
              <MultiBinding Converter="{x:Static local:ValueConverters.IndexToVisibility}">
                <Binding Path="."/>
                <Binding Path="$parent[views:TrackListView].DataContext.Tracks"/>
              </MultiBinding>
            </Panel.IsEnabled>
            <ComboBox Name="leadBase"
                      Width="100" Height="30"
                      ToolTip.Tip="Base Tone"
                      SelectedItem="{Binding LeadArrangement.BaseTone}"
                      IsEnabled="{Binding LeadArrangement, Converter={x:Static ObjectConverters.IsNotNull}}">
              <ComboBox.Items>
                <MultiBinding Converter="{x:Static local:ValueConverters.CommonTonesForArrangementType}">
                  <Binding Path="LeadArrangement"/>
                  <Binding Path="$parent[views:TrackListView].DataContext.CommonToneNames"/>
                </MultiBinding>
              </ComboBox.Items>
            </ComboBox>
            <TextBlock Margin="5, 6, 0, 0" IsHitTestVisible="False" Width="75">
              <TextBlock.Text>
                <MultiBinding Converter="{x:Static local:ValueConverters.HackConverter}">
                  <Binding Path="#leadBase.SelectedItem"/>
                  <Binding Path="LeadArrangement"/>
                </MultiBinding>
              </TextBlock.Text>
            </TextBlock>
          </Panel>
          <!-- END HACK -->
          <Button Content="Tones" Width="100"
                  IsVisible="{Binding !#leadHackPanel.IsVisible}"
                  Command="{Binding $parent[Window].DataContext.EditReplacementTones}"
                  CommandParameter="{Binding LeadArrangement}"/>
        </StackPanel>

        <!-- Rhythm Part -->
        <StackPanel Classes="part">
          <TextBlock Classes="h2" Text="Rhythm" Foreground="{Binding RhythmColor^}"/>
          <TextBlock Text="{Binding RhythmFileNameShort^}" Foreground="DarkGray"
                     IsVisible="{Binding RhythmArrangement, Converter={x:Static ObjectConverters.IsNotNull}}"
                     ToolTip.Tip="{Binding RhythmArrangement.FileName}"/>
          <Button Content="{Binding RhythmArrangement, Converter={x:Static local:ValueConverters.OpenButtonText}}"
                  Width="100"
                  Command="{Binding AddArrangement}"
                  CommandParameter="{x:Static models:ArrangementType.Rhythm}"/>
          <!-- HACK -->
          <Panel Name="rhythmHackPanel" IsVisible="{Binding RhythmArrangement.ToneNames, Converter={x:Static ObjectConverters.IsNull}}">
            <Panel.IsEnabled>
              <MultiBinding Converter="{x:Static local:ValueConverters.IndexToVisibility}">
                <Binding Path="."/>
                <Binding Path="$parent[views:TrackListView].DataContext.Tracks"/>
              </MultiBinding>
            </Panel.IsEnabled>
            <ComboBox Name="rhythmBase"
                      Width="100" Height="30"
                      ToolTip.Tip="Base Tone"
                      SelectedItem="{Binding RhythmArrangement.BaseTone}"
                      IsEnabled="{Binding RhythmArrangement, Converter={x:Static ObjectConverters.IsNotNull}}">
              <ComboBox.Items>
                <MultiBinding Converter="{x:Static local:ValueConverters.CommonTonesForArrangementType}">
                  <Binding Path="RhythmArrangement"/>
                  <Binding Path="$parent[views:TrackListView].DataContext.CommonToneNames"/>
                </MultiBinding>
              </ComboBox.Items>
            </ComboBox>
            <TextBlock Margin="5, 6, 0, 0" IsHitTestVisible="False" Width="75">
              <TextBlock.Text>
                <MultiBinding Converter="{x:Static local:ValueConverters.HackConverter}">
                  <Binding Path="#rhythmBase.SelectedItem"/>
                  <Binding Path="RhythmArrangement"/>
                </MultiBinding>
              </TextBlock.Text>
            </TextBlock>
          </Panel>
          <!-- END HACK -->
          <Button Content="Tones" Width="100"
                  IsVisible="{Binding !#rhythmHackPanel.IsVisible}"
                  Command="{Binding $parent[Window].DataContext.EditReplacementTones}"
                  CommandParameter="{Binding RhythmArrangement}"/>
        </StackPanel>

        <!-- Bass Part -->
        <StackPanel Classes="part">
          <TextBlock Classes="h2" Text="Bass" Foreground="{Binding BassColor^}"/>
          <TextBlock Text="{Binding BassFileNameShort^}" Foreground="DarkGray"
                     IsVisible="{Binding BassArrangement, Converter={x:Static ObjectConverters.IsNotNull}}"
                     ToolTip.Tip="{Binding BassArrangement.FileName}"/>
          <Button Content="{Binding BassArrangement, Converter={x:Static local:ValueConverters.OpenButtonText}}"
                  Width="100"
                  Command="{Binding AddArrangement}"
                  CommandParameter="{x:Static models:ArrangementType.Bass}"/>
          <!-- HACK -->
          <Panel Name="bassHackPanel" IsVisible="{Binding BassArrangement.ToneNames, Converter={x:Static ObjectConverters.IsNull}}">
            <Panel.IsEnabled>
              <MultiBinding Converter="{x:Static local:ValueConverters.IndexToVisibility}">
                <Binding Path="."/>
                <Binding Path="$parent[views:TrackListView].DataContext.Tracks"/>
              </MultiBinding>
            </Panel.IsEnabled>
            <ComboBox Name="bassBase"
                      Width="100" Height="30"
                      ToolTip.Tip="Base Tone"
                      SelectedItem="{Binding BassArrangement.BaseTone}"
                      IsEnabled="{Binding BassArrangement, Converter={x:Static ObjectConverters.IsNotNull}}">
              <ComboBox.Items>
                <MultiBinding Converter="{x:Static local:ValueConverters.CommonTonesForArrangementType}">
                  <Binding Path="BassArrangement"/>
                  <Binding Path="$parent[views:TrackListView].DataContext.CommonToneNames"/>
                </MultiBinding>
              </ComboBox.Items>
            </ComboBox>
            <TextBlock Margin="5, 6, 0, 0" IsHitTestVisible="False" Width="75">
              <TextBlock.Text>
                <MultiBinding Converter="{x:Static local:ValueConverters.HackConverter}">
                  <Binding Path="#bassBase.SelectedItem"/>
                  <Binding Path="BassArrangement"/>
                </MultiBinding>
              </TextBlock.Text>
            </TextBlock>
          </Panel>
          <!-- END HACK -->
          <Button Content="Tones" Width="100"
                  Command="{Binding $parent[Window].DataContext.EditReplacementTones}"
                  CommandParameter="{Binding BassArrangement}"
                  IsVisible="{Binding !#bassHackPanel.IsVisible}"/>
        </StackPanel>

        <!-- Vocals Part -->
        <StackPanel Classes="part">
          <TextBlock Classes="h2" Text="Vocals" Foreground="{Binding VocalsColor^}"/>
          <TextBlock Text="{Binding VocalsFileNameShort^}" Foreground="DarkGray"
                     IsVisible="{Binding VocalsArrangement, Converter={x:Static ObjectConverters.IsNotNull}}"
                     ToolTip.Tip="{Binding VocalsArrangement}"/>
          <Button Content="{Binding VocalsArrangement, Converter={x:Static local:ValueConverters.OpenButtonText}}"
                  Width="100"
                  Command="{Binding AddArrangement}"
                  CommandParameter="{x:Static models:ArrangementType.Vocals}"/>
        </StackPanel>

        <!-- Show Lights Part -->
        <StackPanel Classes="part">
          <TextBlock Classes="h2" Text="Show Lights" Foreground="{Binding ShowLightsColor^}"/>
          <TextBlock Text="{Binding ShowLightsFileNameShort^}" Foreground="DarkGray"
                     IsVisible="{Binding ShowLightsArrangement, Converter={x:Static ObjectConverters.IsNotNull}}"
                     ToolTip.Tip="{Binding ShowLightsArrangement}"/>
          <Button Content="{Binding ShowLightsArrangement, Converter={x:Static local:ValueConverters.OpenButtonText}}"
                  Width="100"
                  Command="{Binding AddArrangement}"
                  CommandParameter="{x:Static models:ArrangementType.ShowLights}"/>
        </StackPanel>
      </StackPanel>
    </DockPanel>
  </Border>
</UserControl>
